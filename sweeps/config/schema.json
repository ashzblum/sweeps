{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "http://dev.wandb.com/schema/config.json",
    "title": "SweepConfig",
    "description": "Weights & Biases Sweep Configuration",
    "type": "object",
    "additionalProperties": false,
    "properties": {
        "apiVersion": {
            "type": "string",
            "description": "Version"
        },
        "kind": {
            "type": "string",
            "description": "Possible values: sweep",
            "enum": [
                "sweep"
            ]
        },
        "description": {
            "type": "string",
            "description": "Short package description"
        },
        "program": {
            "type": "string",
            "description": "Training script to run"
        },
        "entity": {
            "type": "string",
            "description": "The entity for this sweep"
        },
        "project": {
            "type": "string",
            "description": "The project for this sweep"
        },
        "method": {
            "description": "Possible values: bayes, random, grid",
            "enum": [
                "bayes",
                "random",
                "grid"
            ]
        },
        "command": {
            "type": "array",
            "description": "Command used to launch the training script"
        },
        "name": {
            "type": "string",
            "description": "The name of the sweep, displayed in the W&B UI"
        },
        "metric": {
            "type": "object",
            "description": "Metric to optimize",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of metric"
                },
                "goal": {
                    "type": "string",
                    "description": "Possible values: minimize, maximize",
                    "enum": [
                        "minimize",
                        "maximize"
                    ]
                },
                "target": {
                    "type": "number",
                    "description": "The sweep will finish once any run achieves this value"
                }
            },
            "required": [
                "name",
                "goal"
            ],
            "additionalProperties": false
        },
        "early_terminate": {
            "oneOf": [
                {
                    "$ref": "#/definitions/hyperband_stopping"
                },
                {
                    "$ref": "#/definitions/envelope_stopping"
                }
            ]
        },
        "parameters": {
            "type": "object",
            "description": "Config parameters to sweep",
            "propertyNames": {
                "pattern": "^^[A-Za-z_][A-Za-z0-9_.-]*$"
            },
            "additionalProperties": {
                "$ref": "#/definitions/parameter"
            }
        }
    },
    "definitions": {
        "param_categorical": {
            "type": "object",
            "description": "A categorical parameter with allowed values.",
            "properties": {
                "values": {
                    "type": "array",
                    "description": "Discrete values",
                    "uniqueItems": true
                },
                "distribution": {
                    "enum": [
                        "categorical"
                    ]
                }
            },
            "required": [
                "values"
            ]
        },
        "param_single_value": {
            "type": "object",
            "description": "A constant parameter.",
            "properties": {
                "value": {
                    "description": "A constant"
                },
                "distribution": {
                    "enum": [
                        "constant"
                    ]
                }
            },
            "required": [
                "value"
            ]
        },
        "param_quantized": {
            "type": "object",
            "description": "A parameter with a distribution that is quantized",
            "properties": {
                "q": {
                    "type": "number",
                    "default": 1.0,
                    "description": "Quantization parameter for quantized distributions",
                    "minimum": 0.0
                }
            }
        },
        "uniform_or_loguniform_base": {
            "type": "object",
            "description": "A parameter with a distribution function.",
            "properties": {
                "min": {
                    "description": "float",
                    "type": "number",
		    "format": "float"
                },
                "max": {
                    "description": "float",
                    "type": "number",
		    "format": "float"
                }
            },
            "required": [
                "min",
                "max"
            ]
        },
        "param_lognormal_or_normal_base": {
            "type": "object",
            "description": "A lognormally or normally distributed parameter (they share a schema).",
            "properties": {
                "mu": {
                    "type": "number",
                    "description": "Mean for normal or lognormal distributions",
                    "default": 0.0
                },
                "sigma": {
                    "type": "number",
                    "description": "Std Dev for normal or lognormal distributions",
                    "default": 1.0,
                    "minimum": 0.0
                }
            }
        },
        "param_normal": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "distribution": {
                            "enum": [
                                "normal"
                            ]
                        }
                    },
                    "required": [
                        "distribution"
                    ]
                },
                {
                    "$ref": "#/definitions/param_lognormal_or_normal_base"
                }
            ]
        },
        "param_lognormal": {
            "allOf": [
                {
                    "type": "object",
                    "properties": {
                        "distribution": {
                            "enum": [
                                "log_normal"
                            ]
                        }
                    },
                    "required": [
                        "distribution"
                    ]
                },
                {
                    "$ref": "#/definitions/param_lognormal_or_normal_base"
                }
            ]
        },
        "param_qlognormal": {
            "allOf": [
                {
                    "$ref": "#/definitions/param_quantized"
                },
                {
                    "$ref": "#/definitions/param_lognormal_or_normal_base"
                },
                {
                    "type": "object",
                    "properties": {
                        "distribution": {
                            "enum": [
                                "q_log_normal"
                            ]
                        }
                    },
                    "required": [
                        "distribution"
                    ]
                }
            ]
        },
        "param_qnormal": {
            "allOf": [
                {
                    "$ref": "#/definitions/param_quantized"
                },
                {
                    "$ref": "#/definitions/param_lognormal_or_normal_base"
                },
                {
                    "type": "object",
                    "properties": {
                        "distribution": {
                            "enum": [
                                "q_normal"
                            ]
                        }
                    },
                    "required": [
                        "distribution"
                    ]
                }
            ]
        },
        "param_uniform": {
            "allOf": [
                {
                    "$ref": "#/definitions/uniform_or_loguniform_base"
                },
                {
                    "type": "object",
                    "properties": {
                        "distribution": {
                            "enum": [
                                "uniform"
                            ]
                        }
                    }
                }
            ]
        },
        "param_loguniform": {
            "allOf": [
                {
                    "$ref": "#/definitions/uniform_or_loguniform_base"
                },
                {
                    "type": "object",
                    "properties": {
                        "distribution": {
                            "enum": [
                                "log_uniform"
                            ]
                        }
                    },
                    "required": [
                        "distribution"
                    ]
                }
            ]
        },
        "param_quniform": {
            "allOf": [
                {
                    "$ref": "#/definitions/uniform_or_loguniform_base"
                },
                {
                    "$ref": "#/definitions/param_quantized"
                },
                {
                    "type": "object",
                    "properties": {
                        "distribution": {
                            "enum": [
                                "q_uniform"
                            ]
                        }
                    },
                    "required": [
                        "distribution"
                    ]
                }
            ]
        },
        "param_qloguniform": {
            "allOf": [
                {
                    "$ref": "#/definitions/uniform_or_loguniform_base"
                },
                {
                    "$ref": "#/definitions/param_quantized"
                },
                {
                    "type": "object",
                    "properties": {
                        "distribution": {
                            "enum": [
                                "q_log_uniform"
                            ]
                        }
                    },
                    "required": [
                        "distribution"
                    ]
                }
            ]
        },
        "param_int_uniform": {
            "type": "object",
            "description": "Discrete uniform distribution on integers.",
            "properties": {
                "max": {
                    "type": "integer"
                },
                "min": {
                    "type": "integer"
                },
                "distribution": {
                    "enum": [
                        "int_uniform"
                    ]
                }
            },
            "required": [
                "min",
                "max"
            ]
        },
        "param_beta_base": {
            "type": "object",
            "properties": {
                "a": {
                    "type": "number",
                    "format": "float",
                    "minimum": 0.0,
                    "default": 1.0
                },
                "b": {
                    "type": "number",
                    "format": "float",
                    "minimum": 0.0,
                    "default": 1.0
                }
            }
        },
        "param_beta": {
            "allOf": [
                {"$ref": "#/definitions/param_beta_base"},
                {
                    "type":  "object",
                    "description": "beta distribution",
                    "properties": {
                        "distribution": {
                            "enum": ["beta"]
                        }
                    }
                }
            ]
        },
        "param_qbeta": {
            "allOf": [
                {
                    "$ref": "#/definitions/param_beta_base"
                },
                {
                    "$ref": "#/definitions/param_quantized"
                },
                {
                    "type":  "object",
                    "description": "quantized beta distribution",
                    "properties": {
                        "distribution": {
                            "enum": ["q_beta"]
                        }
                    }
                }
            ]
        },
        "parameter": {
            "anyOf": [
                {
                    "$ref": "#/definitions/param_categorical"
                },
                {
                    "$ref": "#/definitions/param_single_value"
                },
                {
                    "$ref": "#/definitions/param_lognormal"
                },
                {
                    "$ref": "#/definitions/param_normal"
                },
                {
                    "$ref": "#/definitions/param_qlognormal"
                },
                {
                    "$ref": "#/definitions/param_qnormal"
                },
                {
                    "$ref": "#/definitions/param_uniform"
                },
                {
                    "$ref": "#/definitions/param_loguniform"
                },
                {
                    "$ref": "#/definitions/param_quniform"
                },
                {
                    "$ref": "#/definitions/param_qloguniform"
                },
                {
                    "$ref": "#/definitions/param_int_uniform"
                },
                {
                    "$ref": "#/definitions/param_beta"
                },
                {
                    "$ref": "#/definitions/param_qbeta"
                }
            ]
        },
        "hyperband_stopping": {
            "type": "object",
            "description": "Speed up hyperparameter search by killing off runs that appear to have lower performance than successful training runs",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Possible values: hyperband",
                    "enum": [
                        "hyperband"
                    ]
                },
                "max_iter": {
                    "type": "integer",
                    "description": "Set the last epoch to finish trimming runs, and hyperband will automatically calculate the prior epochs to trim runs"
                },
                "min_iter": {
                    "type": "integer",
                    "description": "Set the first epoch to start trimming runs, and hyperband will automatically calculate the subsequent epochs to trim runs",
                    "minimum": 1
                },
                "s": {
                    "type": "number",
                    "description": "Set the number of steps you trim runs at, working backwards from the max_iter"
                },
                "eta": {
                    "type": "number",
                    "description": "At every eta^n steps, hyperband continues running the top 1/eta runs and stops all other runs",
                    "minimum": 1.0,
                    "default": 3.0
                }
            },
            "allOf": [
                {
                    "required": [
                        "type"
                    ]
                },
                {
                    "anyOf": [
                        {
                            "required": [
                                "max_iter",
                                "s"
                            ]
                        },
                        {
                            "required": [
                                "min_iter"
                            ]
                        }
                    ]
                }
            ],
            "additionalProperties": false
        },
        "envelope_stopping": {
            "type": "object",
            "description": "Speed up hyperparameter search by killing off runs that appear to have lower performance than successful training runs",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Possible values: hyperband",
                    "enum": [
                        "envelope"
                    ]
                }
            },
            "required": [
                "type"
            ]
        }
    },
    "required": [
        "method",
        "parameters"
    ]
}
